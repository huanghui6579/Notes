apply plugin: 'com.android.application'

def LOG_TO_FILE_LEVEL = "ERROR"

android {
    def globalConfiguration = rootProject.extensions.getByName("ext");

    signingConfigs {
        debug {
            storeFile file('doc/debug.keystore-platform')
        }
        release {
            keyAlias 'Notes'
            keyPassword '13266665769'
            storeFile file('doc/Notes.jks')
            storePassword '13266665769'
        }
    }
//    lintOptions {
//        abortOnError false
//    }
    compileSdkVersion globalConfiguration.getAt("compileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("buildToolsVersion")
    defaultConfig {
        applicationId 'com.yunxinlink.notes'
        minSdkVersion globalConfiguration.getAt("minSdkVersion")
        targetSdkVersion globalConfiguration.getAt("targetSdkVersion")
        versionCode 1
        versionName "1.0"
        buildConfigField("boolean", "LOG_TO_FILE_ENABLE", "true")
        buildConfigField("boolean", "LOG_ENABLE", "true")
        buildConfigField("String", "LOG_TO_FILE_LEVEL", "\"${LOG_TO_FILE_LEVEL}\"")
        //VERBOSE(2, "V"),
        //DEBUG(3, "D"),
        //INFO(4, "I"),
        //WARN(5, "W"),
        //ERROR(6, "E"),
        //ASSERT(7, "A");
        signingConfig signingConfigs.debug
        //ADD THIS LINE:
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        def BOOLEAN = "boolean"
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField(BOOLEAN, "LOG_TO_CONSOLE_ENABLE", "false")
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
            buildConfigField(BOOLEAN, "LOG_TO_CONSOLE_ENABLE", "true")
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':sharesdk')
    compile supportDependencies.appcompat
    compile supportDependencies.design
    compile supportDependencies.cardview
    compile supportDependencies.palette
    compile supportDependencies.universalimageloader
    compile supportDependencies.libphonenumber
    compile supportDependencies.permissions
    compile supportDependencies.klog
    compile supportDependencies.jlog
//    compile supportDependencies.gson
    compile supportDependencies.retrofit
    compile supportDependencies.converterGson
    compile supportDependencies.loggingInterceptor
    compile project(':lockpattern')
/*
    //ADD THESE LINES:
    // Android JUnit Runner
    androidTestCompile ('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
// JUnit4 Rules
    androidTestCompile ('com.android.support.test:rules:0.5') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
// Espresso core
    androidTestCompile ('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-annotations'
    }*/
    compile supportDependencies.vectorDrawable
    testCompile supportDependencies.junit
}
